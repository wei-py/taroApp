name: Build & Upload iOS App

on:
  push:
    branches: [ main ]
    tags: [ v* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  # 核心构建参数
  APP_ID: ${{ secrets.APP_ID || 'com.bto.Light' }}
  APP_NAME: ${{ secrets.APP_NAME || 'BTOLIGHT' }}
  VERSION_NUMBER: ${{ secrets.VERSION_NUMBER || '2.9.0' }}
  BUILD_NUMBER: ${{ secrets.BUILD_NUMBER || github.run_number }}
  BUILD_TYPE: ${{ secrets.BUILD_TYPE || 'AppStore' }}

  # 签名 & 团队 - 确保TEAM_ID不为空
  TEAM_ID: ${{ secrets.TEAM_ID }}
  PROVISIONING_PROFILE_SPECIFIER: ${{ secrets.PROVISIONING_PROFILE_SPECIFIER || 'BTOLIGHT' }}
  CODE_SIGN_IDENTITY: ${{ secrets.CODE_SIGN_IDENTITY || 'Apple Distribution' }}

  # 证书和 Profile（Base64 编码）
  SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.SIGNING_CERTIFICATE_P12_DATA }}
  SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}
  PROVISIONING_PROFILE_DATA: ${{ secrets.PROVISIONING_PROFILE_DATA }}

  # App Store Connect - API Key方式（推荐）
  APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
  APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
  APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}

jobs:
  build-ios:
    name: Build iOS App
    runs-on: macos-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'pnpm'
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        working-directory: ios
        
    - name: Install Dependencies
      run: |
        pnpm install --frozen-lockfile
        cd ios && bundle install
        
    - name: Install CocoaPods Dependencies
      run: |
        cd ios
        pod install --repo-update
        
    - name: Build Taro RN Bundle
      run: |
        pnpm run build:rn
        
    - name: Setup Keychain
      run: |
        security create-keychain -p "${{ secrets.KEYCHAIN_PASSWORD || 'temp_password' }}" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "${{ secrets.KEYCHAIN_PASSWORD || 'temp_password' }}" build.keychain
        security set-keychain-settings -t 3600 -u build.keychain
        
    - name: Import Certificate
      run: |
        echo "$SIGNING_CERTIFICATE_P12_DATA" | base64 --decode > certificate.p12
        security import certificate.p12 -k build.keychain -P "$SIGNING_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "${{ secrets.KEYCHAIN_PASSWORD || 'temp_password' }}" build.keychain
        rm certificate.p12
        
    - name: Import Provisioning Profile
      run: |
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        echo "$PROVISIONING_PROFILE_DATA" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision
        
    - name: Setup App Store Connect API Key
      run: |
        mkdir -p ~/.appstoreconnect/private_keys
        echo "$APP_STORE_CONNECT_API_KEY_CONTENT" | base64 --decode > ~/.appstoreconnect/private_keys/AuthKey_$APP_STORE_CONNECT_API_KEY_ID.p8
        
    - name: Build and Upload to App Store Connect
      run: |
        cd ios
        bundle exec fastlane release
      env:
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
        FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
        
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/
          ios/fastlane/report.xml
          ios/fastlane/test_output/
        retention-days: 7
        
    - name: Cleanup
      if: always()
      run: |
        security delete-keychain build.keychain || true
        rm -rf ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision || true
        rm -rf ~/.appstoreconnect/private_keys/AuthKey_$APP_STORE_CONNECT_API_KEY_ID.p8 || true

