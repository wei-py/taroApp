# ios/fastlane/Fastfile

default_platform(:ios)

platform :ios do
  desc "构建 React Native iOS 应用"
  lane :build do
    # Step 1: 安装 JS 依赖 (pnpm)
    sh("cd .. && pnpm install")

    # Step 2: 生成 JS Bundle
    sh("cd .. && npx react-native bundle --entry-file index.js --platform ios --dev false --bundle-output ios/main.jsbundle --assets-dest ios")

    # Step 3: 安装 Pods（如果还没装）
    sh("cd ios && pod install")

    # Step 4: 解锁钥匙串（CI 需要）
    unlock_keychain(
      path: "/Users/runner/Library/Keychains/login.keychain-db",
      password: "" # GitHub Actions macOS runner 默认无密码
    )

    # Step 5: 启用自动签名（确保 Xcode 项目中也是自动签名）
    update_code_signing_settings(
      use_automatic_signing: true,
      path: "./taroApp.xcodeproj",
      targets: ["taroApp"] # 替换为你的 target 名
    )

    # Step 6: 登录 Apple Developer 账号（用于自动管理证书/描述文件）
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_API_KEY_CONTENT"],
      duration: 1200,
      in_house: false
    )

    # 或者用 Apple ID 登录（简单但安全性较低）
    # appstore_login

    # Step 7: 构建并导出 .ipa
    build_app(
      workspace: "taroApp.xcworkspace", # 或 .xcodeproj
      scheme: "taroApp",
      export_method: "app-store", # 可选: ad-hoc, enterprise, development
      export_options: {
        provisioningProfiles: {
          "com.bto.Light" => "BTOLIGHT"
        }
      },
      export_xcargs: "-allowProvisioningUpdates", # 允许自动创建/更新描述文件
      suppress_xcode_output: true,
      clean: true
    )

    # 可选：上传 TestFlight
    # upload_to_testflight(
    #   skip_waiting_for_build_processing: true,
    #   notify_external_testers: false
    # )
  end
end