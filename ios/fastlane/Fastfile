# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  # 通用配置
  before_all do
    # 设置构建日志详细程度
    set_build_number_repository
    # 注释掉 cocoapods，因为 GitHub Actions 工作流中已经单独执行了 pod install
    # cocoapods
  end

  # 更新 Info.plist 文件
  def update_info_plist
    update_info_plist(
      plist_path: "taroApp/Info.plist",
      app_identifier: ENV["FL_APP_IDENTIFIER"] || ENV["APP_ID"] || "com.bto.Light",
      display_name: ENV["FL_UPDATE_PLIST_DISPLAY_NAME"] || ENV["APP_NAME"] || "BTOLIGHT",
      version_number: ENV["FL_VERSION_NUMBER_VERSION_NUMBER"] || ENV["VERSION_NUMBER"] || "2.9.0",
      build_number: ENV["FL_BUILD_NUMBER_BUILD_NUMBER"] || ENV["BUILD_NUMBER"] || Time.now.strftime("%Y%m%d%H%M")
    )
  end

  # 更新代码签名设置
  def update_code_signing_settings
    update_code_signing_settings(
      use_automatic_signing: false,
      path: "taroApp.xcodeproj",
      code_sign_identity: ENV["FL_CODE_SIGN_IDENTITY"] || ENV["CODE_SIGN_IDENTITY"] || "Apple Distribution",
      team_id: ENV["FASTLANE_TEAM_ID"] || ENV["TEAM_ID"],
      profile_name: ENV["FL_PROVISIONING_PROFILE_SPECIFIER"] || ENV["PROVISIONING_PROFILE_SPECIFIER"] || "BTOLIGHT"
    )
  end

  # 开发环境构建
  desc "构建开发环境的iOS应用"
  lane :build_dev do |options|
    update_info_plist
    update_code_signing_settings
    increment_version_number(version_number: ENV["FL_VERSION_NUMBER_VERSION_NUMBER"] || "1.0.0")
    build_app(
      scheme: "taroApp",
      workspace: "taroApp.xcworkspace",
      export_method: "development",
      configuration: "Debug",
      clean: true,
      xcargs: "GCC_PREPROCESSOR_DEFINITIONS='$(inherited) DEBUG=1'",
      export_options: {
        method: "development",
        compileBitcode: false
      }
    )
  end

  # 测试环境构建
  desc "构建测试环境的iOS应用"
  lane :build_test do |options|
    update_info_plist
    update_code_signing_settings
    increment_version_number(version_number: ENV["FL_VERSION_NUMBER_VERSION_NUMBER"] || "1.0.0")
    build_app(
      scheme: "taroApp",
      workspace: "taroApp.xcworkspace",
      export_method: "ad-hoc",
      configuration: "Release",
      clean: true,
      export_options: {
        method: "ad-hoc",
        compileBitcode: true
      }
    )
  end

  # 发布环境构建
  desc "构建发布环境的iOS应用"
  lane :build_release do |options|
    update_info_plist
    update_code_signing_settings
    increment_version_number(version_number: ENV["FL_VERSION_NUMBER_VERSION_NUMBER"] || "2.9.0")
    increment_build_number(build_number: ENV["FL_BUILD_NUMBER_BUILD_NUMBER"] || Time.now.strftime("%Y%m%d%H%M"))
    build_app(
      scheme: "taroApp",
      workspace: "taroApp.xcworkspace",
      export_method: ENV["BUILD_TYPE"] || "app-store",
      configuration: "Release",
      clean: true,
      export_options: {
        method: ENV["BUILD_TYPE"] || "app-store",
        compileBitcode: true,
        manageAppVersionAndBuildNumber: false
      }
    )
  end

  # 修复方案
  
  ### 1. 修改 Fastfile 中的 lane 名称
  
  需要修改 Fastfile 中与内置 action 冲突的 lane 名称：
  ```
  # 上传到App Store Connect
  desc "上传应用到App Store Connect"
  # 将原来的 upload_to_app_store 改为自定义名称，避免冲突
  lane :publish_to_app_store do |options|
  # 方式1: 使用API Key (推荐)
  if ENV["APP_STORE_CONNECT_API_KEY_ID"] && ENV["APP_STORE_CONNECT_ISSUER_ID"] && ENV["APP_STORE_CONNECT_API_KEY_CONTENT"]
  # 保存API Key到临时文件
  api_key_path = File.join(Dir.tmpdir, "app_store_connect_key.p8")
  File.open(api_key_path, "w") { |file| file.write(ENV["APP_STORE_CONNECT_API_KEY_CONTENT"]) }
  
  # 调用内置的 upload_to_app_store action
  upload_to_app_store(
  api_key_path: api_key_path,
  api_key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"],
  api_key_issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
  ipa: "taroApp.ipa",
  skip_metadata: true,
  skip_screenshots: true,
  submit_for_review: false,
  automatic_release: false
  )
  
  # 删除临时API Key文件
  File.delete(api_key_path) if File.exist?(api_key_path)
  else
  # 方式2: 使用用户名密码 (备用)
  upload_to_app_store(
  ipa: "taroApp.ipa",
  skip_metadata: true,
  skip_screenshots: true,
  submit_for_review: false,
  automatic_release: false
  )
  end
  end
  
  # 完整的发布流程
  desc "完整的iOS应用发布流程: 构建并上传到App Store Connect"
  lane :release do |options|
  build_release
  # 相应地更新调用名称
  publish_to_app_store
  end
  ```

  # 完整的发布流程
  desc "完整的iOS应用发布流程: 构建并上传到App Store Connect"
  lane :release do |options|
    build_release
    upload_to_app_store
  end

  # 清理缓存
  lane :clean do
    sh "rm -rf ./build"
    sh "xcodebuild clean -workspace taroApp.xcworkspace -scheme taroApp"
  end

  # 后处理
  after_all do |lane|
    # 可以在这里添加构建完成后的通知或其他操作
    puts "✅ iOS构建流程 #{lane} 已完成！"
  end

  # 错误处理
  error do |lane, exception|
    # 可以在这里添加错误通知或日志记录
    puts "❌ iOS构建流程 #{lane} 失败: #{exception}"
  end
end